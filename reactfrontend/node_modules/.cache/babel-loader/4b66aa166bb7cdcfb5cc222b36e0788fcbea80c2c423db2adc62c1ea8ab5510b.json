{"ast":null,"code":"import axios from \"axios\";\n\n// Creating an axios instance\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:3000/\",\n  // Correct key name: baseURL\n  headers: {\n    \"Content-Type\": \"application/json\" // Fixing the capitalization\n  }\n});\n\n// Adding a request interceptor to include the access token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["C:/Users/HP/Desktop/jobbaHub/reactfrontend/src/auth/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Creating an axios instance\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"http://localhost:3000/\", // Correct key name: baseURL\r\n    headers: {\r\n        \"Content-Type\": \"application/json\", // Fixing the capitalization\r\n    },\r\n});\r\n\r\n// Adding a request interceptor to include the access token\r\naxiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem(\"access\");\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC/BC,OAAO,EAAE,wBAAwB;EAAE;EACnCC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB,CAAE;EACxC;AACJ,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC5C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}