{"ast":null,"code":"import axios from \"axios\";\n\n// creating an axios instance\nconst axiosInstance = axios.create({\n  baseUrl: \"https://\",\n  headers: {\n    \"content-Type\": \"application/json\"\n  }\n});\n\n// adding an request interceptor to include\n\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(access);\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseUrl","headers","interceptors","request","use","config","token","localStorage","getItem","access","Authorization","error","Promise","reject"],"sources":["/home/austin/Desktop/side_project/reactfrontend/src/auth/axios.js"],"sourcesContent":["import axios from \"axios\";\n\n// creating an axios instance\nconst axiosInstance = axios.create({\n        baseUrl: \"https://\",\n        headers: {\n            \"content-Type\": \"application/json\"   \n        },\n    });\n\n\n    // adding an request interceptor to include\n\naxiosInstance.interceptors.request.use(\n    (config) =>{\n        const token = localStorage.getItem(access);\n        if (token){\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,UAAU;EACnBC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAGF;;AAEJH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAI;EACP,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACC,MAAM,CAAC;EAC1C,IAAIH,KAAK,EAAC;IACND,MAAM,CAACJ,OAAO,CAACS,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAM,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}